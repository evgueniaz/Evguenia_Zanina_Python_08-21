Exercise 1.	
Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.


rooster = [2, "city", b"hello", bool(10), {"key_1": 6}]
for item in rooster:
    print(type(item))


Exercise 2.
Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка элементов необходимо использовать функцию input().


set = []
i = 1
n = int(input("Введите число элементов в списке : "))
while i <= n:
    x = int(input("Введите элемент списка : "))
    set.append(x)
    i += 1
print(set)
m = 0
while m < n - 1:
    set[m], set[m+1] = set[m+1], set[m]
    m += 2
print(set)



Exercise 3.
Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц (зима, весна, лето, осень). Напишите решения через list и через dict.


month = int(input("Введите номер месяца года ---"))
season = ["зима", "весна", "лето", "осень"]
if 2 < month < 6:
    print(season[1])
elif 5 < month < 9:
    print(season[2])
elif 8 < month < 12:
    print(season[3])
else:
    print(season[0])


month = int(input("Введите номер месяца года ---"))
season = {1: 'зима', 2: 'зима', 3: 'весна', 4: 'весна', 5: 'весна', 6: 'лето', 7: 'лето', 8: 'лето',
          9: 'осень', 10: 'осень', 11: 'осень', 12: 'зима'}
print("Это ", season.get(month))

Exercise 4.
Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.


list = input("Введите несколько слов через пробел ___")
list = list.split()
for i, item in enumerate(list):
    print(i + 1, item[:10])


Exercise 5.
Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].


my_list = [7, 5, 3, 3, 2]
print(my_list)
x = int(input("Введите натуральное число >>>"))
i = -1
while i < len(my_list):
    i += 1
    if x < my_list[len(my_list) - 1]:
        my_list.insert(len(my_list), x)
        break
    if x > my_list[i]:
        my_list.insert(i, x)
        break
    if x == my_list[i]:
        my_list.insert(i + 1, x)
        break
print(my_list)


Задание 6.
*Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения). Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
    (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
    (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
    (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например название, а значение — список значений-характеристик, например список названий товаров.
Пример:

{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}



number_of_goods = int(input("Введите количество товаров ---"))
i = 1
names = []
prices = []
amounts = []
units = []
while i <= number_of_goods:
    name_good = input("Введите название товара ---")
    price_good = input("Введите цену товара ---")
    amount_good = input("Введите количество товара ---")
    unit_good = input("Введите единицу измерения товара ---")
    data = dict(Название=name_good, Цена=price_good, Количество=amount_good, Единица_измерения=unit_good)
    good = (i, data)
    print(good)
    i += 1
    if name_good in names:
        continue
    else:
        names.append(name_good)
    if price_good in prices:
        continue
    else:
        prices.append(price_good)
    if amount_good in amounts:
        continue
    else:
        amounts.append(amount_good)
    if unit_good in units:
        continue
    else:
        units.append(unit_good)
analytics = dict(Название=names, Цена=prices, Количество=amounts, Единица_измерения=units)
print(analytics)



