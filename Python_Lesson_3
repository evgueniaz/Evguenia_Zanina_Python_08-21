1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.


print(f"Результат деления = {quotient()}")

dividend = float(input("Введите делимое ..."))
divisor = float(input("Введите делитель ..."))
if divisor != 0:
    def quotient():
        return dividend / divisor
else:
    print(f"Undefined: деление на ноль невозможно.")
    divisor = float(input("Введите другой делитель ..."))
    def quotient():
        return dividend / divisor

print(f"{dividend} / {divisor} = {quotient()}")



2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

def user_data(name = 'name',
              surname = 'surname',
              birth_year = 'year of birth',
              city = 'city', email = 'email',
              phone = 'phone'):
    result = str(name + " " + surname + " " + birth_year + " " + city + " " + email + " " + phone)
    return result


print(user_data("John", "Lock", "2000", "Moscow", "et@at.com", "+239776"))

def user_data(name = 'name',
              surname = 'surname',
              birth_year = 'year of birth',
              city = 'city', email = 'email',
              phone = 'phone'):
    result = str("name:" + " " + name + " " + "surname:" + " " + surname + " "
                 + "birth year:" + " " + birth_year + " " +
                 "city of living:" + " " + city + " " +
                 "email:" + " " + email + " " +
                 "phone:" + " " + phone)
    return result


print(user_data("John", "Lock", "2000", "Moscow", "et@at.com", "+239776"))


3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.
def my_func(a, b, c):
    return a + b + c - min(a, b, c)


print(my_func(8,0,56))

def my_func(a, b, c):
    return a + b + c - min(a, b, c)


a = float(input("Введите первое число ..."))
b = float(input("Введите второе число ..."))
c = float(input("Введите третье число ..."))

print(f"Сумма наибольших двух чисел = {my_func(a, b, c)}")



4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
** Подсказка:** попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

Вариант 1:

def my_func(x, y):
    return x ** y
print(my_func(4, -2))


x = float(input("Введите действительное положительное число ..."))
while x <= 0:
    x = float(input("Введено неверное значение. Введите действительное положительное число ..."))
y = int(input("Введите целое отрицательное число ..."))
while y >= 0 or y % 1 != 0:
    y = int(input("Введено неверное значение. Введите целое отрицательное число ..."))


def my_func(x, y):
    return x ** y


print(my_func(x, y))




Вариант 2:

x = float(input("Введите действительное положительное число ..."))
while x <= 0:
    x = float(input("Введено неверное значение. Введите действительное положительное число ..."))
y = int(input("Введите целое отрицательное число ..."))
while y >= 0 or y % 1 != 0:
    y = int(input("Введено неверное значение. Введите целое отрицательное число ..."))

def my_func(x, y):
    i = 1
    z = 1
    while i <= abs(y):
        z = z / x
        i += 1
    return z

print(f"{x} в степени {y} даёт {my_func(x, y)}")



5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

line = input("Введите несколько чисел через пробел ___")
num_list = []

list = line.split()
for i in list:
    num_list.append(i)
print(num_list)

while num_list[-1] != '#':
    for i in range(len(num_list)):
        num_list[i] = int(num_list[i])
    sum_function = sum(num_list)
    print(f"Сумма введенных чисел равна {sum_function}")
    line = (input("Введите числа для суммирования через пробел или знак '#', чтобы закончить ... "))

    list = line.split()
    for i in list:
        num_list.append(i)

if num_list[-1] == '#':
    del num_list[-1]
    for i in range(len(num_list)):
        num_list[i] = int(num_list[i])
    sum_function = sum(num_list)
print(f"Сумма введенных чисел равна {sum_function}")



6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

line = input("Введите слова через пробел   ")
print(f"Ваша строка:   {line}")


def int_func ():
    new_line = line.title()
    return new_line

print(f"Новая строка:   {int_func()}")


